:class login :B11_Regular

    ∇ Compose;R;MyTabs
      :Access public
      RequiresLogin←0
      Use'jsSHA'
      title←'B11 - Login'
     
      (R←'.container' '#mainCnt'Add _.div)Position'center' 'center' '.container'
     
      MyTabs←'#loginTabs'R.Add _.ejTab
      MyTabs.Sections←MakeTab¨⍳2
      MyTabs.Titles←((_.Icon'fa-sign-in')' Login')((_.Icon'fa-user-plus')' Sign Up')
      MyTabs.Theme←'0'
    ∇


    ∇ R←MakeTab i;msg;ig;sbtn;form
      R←'.container'New _.div
      msg←('#welcome',⍕R)R.Add _.div
      '#welcome_title'msg.Add _.p'Welcome!'
     
      :Select i
      :Case 1
          msg.Add'If you''re a returning customer, please login using your credentials. '
          msg.Add(_.jBox'Tooltip' 'Sorry, this function is not yet implemented!' '(Forgot your password?)')_.br
          msg.Add'If you''re a new visitor, most functionality will require you to login, so why not signup right now? (Hint:it''s free!)'_.br _.br
          form←R.Add _.Form
          ig←'#login'form.Add _.InputGrid
          ig.Labels←{New _.Icon ⍵}¨'fa-tag' 'fa-lock'
          ig.Inputs←{⍵ New _.EditField}¨'Luserid' 'Lpswd'
          ig.Inputs[1 2].SetAttr'placeholder="User ID"'('placeholder="Password"' 'type="Password"')
          'Hpswd'form.Add _.Input'hidden' 'Hpswd'
          'Lsalt'form.Add _.Input'hidden' 'Lsalt'
          'Tsalt'form.Add _.Input'hidden' 'Tsalt'
          ig.Inputs[1].On'blur' 'GetSalt'
          ig.Inputs[2].On'blur' 0 '' 'HashPass()'
     
        ⍝ Submit-Button
          sbtn←'class="primBtn" id="loginBtn" type="submit"'R.Add _.Button(⊂(New _.Icon'fa-sign-in'),' Login')
          sbtn.On'click' 'Login'(('uid' 'val' '#Luserid')('hpwd' 'val' '#Hpswd')('tslt' 'val' '#Tsalt'))
     
          Add _.Script ScriptFollows
        ⍝ function HashPass(){
        ⍝   var hashObj = new jsSHA("SHA-256","TEXT");
        ⍝   hashObj.update(($("#Lsalt").val())+$("#Lpswd").val());
        ⍝   temp = hashObj.getHash("HEX",{"outputUpper":true});
        ⍝   hashObj = new jsSHA("SHA-256","TEXT");
        ⍝   hashObj.update(($("#Tsalt").val())+temp);
        ⍝   $("#Hpswd").val(hashObj.getHash("HEX",{"outputUpper":true}));
        ⍝ }
     
     
      :Case 2
          msg.Add'Thank you for your interest in B11. Please be assured that our professional brokerage-platform will meet all your trading-needs'
          msg.Add' and exceed your wildest expectations. Our team of dedicated and professional developers is continously working in several timezones'
          msg.Add' to enhance the features and the user-experience of this platform. We do look forward to getting to know you and to help your business grow.'
          Ssalt←#.utils.salt 32
          ig←(form←'#signup'R.Add _.Form).Add _.InputGrid
          ig.Labels←{New _.Icon ⍵}¨'fa-user' 'fa-tag' 'fa-at' 'fa-lock'
          ig.Inputs←{⍵ New _.EditField}¨'Sname' 'Suserid' 'Smail' 'Spswd'
          ig.Inputs[1].SetAttr⊂'placeholder="Name"'
          ig.Inputs[2].SetAttr⊂'placeholder="UserID"'
          ig.Inputs[3].SetAttr⊂'placeholder="Email"'
          ig.Inputs[4].SetAttr'placeholder="Password"' 'type="Password"'
          ig.Inputs[4].On'blur' 0 '' 'SHashPass()'
     
          'Ssalt'form.Add _.Input'hidden'Ssalt
          'Shpw'form.Add _.Input'hidden' ''  ⍝ hashed pswd used for signup
          (form.Add _.input).(type name)←'hidden' 'Lpswd'
     
          sbtn←'class="primBtn" id="signupBtn"'R.Add _.Button(⊂(New _.Icon'fa-user-plus'),' Signup')
          sbtn.On'click' 'Signup'(('name' 'val' '#Sname')('mail' 'val' '#Smail')('uid' 'val' '#Suserid')('hpwd' 'val' '#Shpw'))
     
          Add _.Script ScriptFollows
        ⍝ function SHashPass(){
        ⍝   var hashObj = new jsSHA("SHA-256","TEXT");
        ⍝   hashObj.update(($("#Ssalt").val())+$("#Spswd").val());
        ⍝   $("#Shpw").val(hashObj.getHash("HEX",{"outputUpper":true}));
        ⍝ }
     
      :EndSelect
    ∇

    ∇ R←GetSalt;ret
      :Access public
      ret←(SessionGet'APIref').CallAPI('Login1'_value)
      R←Execute'#Lsalt'#._JSS.Val(UserSalt←3 1⊃ret)
      R,←Execute'#Tsalt'#._JSS.Val(TempSalt←2⊃3⊃ret)
    ∇

    ∇ R←Login;Luserid;Hpswd;Tsalt;ret;newUrl
      :Access public
      Luserid←Get'uid'
      Hpswd←Get'hpwd'
      Tsalt←Get'tslt'
      ret←(SessionGet'APIref').CallAPI('Login2'(Luserid Hpswd Tsalt))
      :If 0=⊃ret
          newUrl←(_Request.GetHeader'origin'),'/index'  ⍝ Host
          _Request.Session.(UID tUID)←3⊃ret
          _Request.Session.showMsg←,⊂2('Welcome back, ',_Request.Session.tUID)
          R←Execute('window.location="',newUrl,'";')
      :Else
          R←Execute _.jBox.Modal New _.Panel(2⊃ret)'error'
      :EndIf
    ∇

    ∇ R←Signup;Sname;Smail;Suserid;Hpswd;ret
      :Access public
      Sname←Get'name'
      Smail←Get'mail'
      Suserid←Get'uid'
      Hpswd←Get'hpwd'
      ret←(SessionGet'APIref').CallAPI'AddClient'(Sname Smail Suserid Hpswd Ssalt)
      :If 0=⍬⍴ret  ⍝ success
          R←Execute'green'_.jBox.Notice'New user created!'
          R,←Execute'#signup'#._JSS.Trigger'reset'
      :Else
          R←Execute _.jBox.Modal New _.Panel(2⊃ret)'error'
      :EndIf
      R,←Execute'#Ssalt'Val Ssalt←#.utils.salt 32 ⍝ reset signup salt
    ∇

:endclass
