:class index : B11_Regular

⍝ Issues:
⍝ - unimportant detail: "Settings"-Tab: Position of jBox (-> MB)
⍝ - StackPanel.Horizontal←1: Layout
⍝   actually I would prefer to use floated divs, but they do not seem to float, as the parent container-div seems to prevent that. Adám?!
⍝ - (Scenarios: ejGrids area ends at bottom of screen, result-table may extend beyond that - seen twice, not sure how to repro, send a forum-msg to SF)
⍝ - Scenarios: List of Scen: when adding/editing, the date-cell gets accessible. It seems there is no way to
⍝    assign a readonly-type, it is only possible to reject edits of that cell. We do not need that, since
⍝    we only process the name anyway and rewrite the table afterwards...
⍝
⍝ Next Steps:
⍝ + MAJOR Clean up code needed: indent, localize variables, harmonize names, add Section, remove un-executed functions, re-organize functionality, :cases etc.



    :field public t3settings
    :field public ClientSummary
    :field public Commodities
    :field public ListPortfolios
    :field public CurrPFid
    :field public CurrPFname
    :field public CurrSCid←0  ⍝ id of current scenario
    :field public CurrSCname←''
    :field public CurrSCdata←0 0⍴0
    :field public chSelect

    :section Main


    ∇ Compose;maintabs
      :Access public
      Use'jBox'
      →PreFlightCheck↓0
      Use'⍎index.js'
      ClientSummary←CatchAPIErrors(SessionGet'APIref').CallAPI('ClientSummary'(SessionGet'UID'))
      Commodities←CatchAPIErrors(SessionGet'APIref').CallAPI('GetCommodities')  ⍝ [;1]=id, [;2]=name, [;3]=price, [;4]=nice title
      Add _.Script('commtab'_JSS.JSData'code' 'name' 'price' 'title'⍪Commodities)
      Add _.Script('commodities'_JSS.JSData('text' 'value')⍪Commodities[;4 1])
      maintabs←'#maintabs'Add _.ejTab
      maintabs.Titles←((_.Icon'fa-table')' Portfolios')((_.Icon'fa-magic')' Scenarios')((_.Icon'fa-bar-chart')' Charts')((_.Icon'fa-cog')' Settings')
      maintabs.Sections←MakeTab¨⍳4
⍝      'hiddenItemIndex'maintabs.Set 1 2 ⍝ would be nice, but SF can not make them visible again (show not working in CallbackFn1)
⍝  try this in console:
⍝ $("#maintabs").data("ejTab").showItem(2);
⍝ the content is shown, but the tab stays hidden. I posted on SFs forum about that...
    ∇

    ∇ R←MakeTab i;pfl_titles;pflgrid;tbi;pfItemsGridData;pfc_titles;pfItemsGrid;pfsc;pflist;pfs;ig;sbtn;pfColumns;tab;tab2;cpf;chrt
      R←'.container'New _.div
      :Select i
      :Case 1
          tabContent←R.Add _.div
          ypf←'style="float:left;"'tabContent.Add _.div
          :If 0∊⍴ClientSummary
              ListPortfolios←0 5⍴''
          :Else
              pfs←{CatchAPIErrors(SessionGet'APIref').CallAPI('PortfolioSummary'((SessionGet'UID')⍵))}¨ClientSummary[;6]
              ListPortfolios←ClientSummary[;6 1 5 2 3]
          :EndIf
     
          '#h2pfl'ypf.Add _.h2'Your portfolios'
     
          pfColumns←⎕NS¨5⍴⊂''
          pfColumns.field←'id' 'name' 'lupd' 'cntComm' 'cntScen'
          pfColumns.headerText←'ID' 'Name' 'Last Update' '# Commodities' '# Scenarios'
          pfColumns.textAlign←'Right' 'Left' 'Left' 'Right' 'Right'
          pfColumns[3].format←'{0:yy/MM/dd}'
          pfColumns[1].(isIdentity isPrimaryKey visible)←_true _true _false
     
          pflgrid←'#ListPortfolios'ypf.Add _.ejGrid((0 5⍴0)pfColumns)
          initCode←'ListPortfolios'UpdateDataSourceWith(ListPortfolios)('id' 'name' 'lupd' 'cntComm' 'cntScen')('lupd')
          ypf.Add _.Script('$(function(){',initCode,'});')
     
          tbi←2↓∊', ej.Grid.ToolBarItems.'∘,¨'Add' 'Edit' 'Delete' 'Update' 'Cancel'
          'toolbarSettings'pflgrid.Set'⍎{ showToolbar: true, toolbarItems: [',tbi,']}'
          'editSettings'pflgrid.Set'⍎{allowEditing: true, allowAdding: true, allowDeleting: true,editMode: ej.Grid.EditMode.ExternalFormTemplate, externalFormTemplateID: "#pfltemplate" }'
          'allowSorting'pflgrid.Set _true
          pflgrid.On'rowSelected' 'CallbackFn1'(('row' 'argument' 'data'))
          pflgrid.On('endAdd' 'endEdit' 'endDelete')'CallbackFn1'('editcell' 'argument' 'data')
          '#pfltemplate' 'type="text/template"'Add _.script ScriptFollows
     
⍝   <table>
⍝       <tr>
⍝           <td>Name of portfolio<input id="id" name="id" value="{{:id}}" type="hidden"  /></td>
⍝           <td>
⍝               <input id="name" name="name" value="{{:name}}"  />
⍝           </td>
⍝       </tr>
⍝   </table>
     
          cpf←'#currPf' 'style="display:none;float:left;"'tabContent.Add _.div
          '#h2pfc'cpf.Add _.h2('Listing of portfolio '('.pfname'New _.span))
     
          pfItemsGridData←0 6⍴' '
          pfColumns←⎕NS¨6⍴⊂''
          pfColumns.field←'title' 'purch' 'count' 'price' 'val' 'id'
          pfColumns.headerText←'Name (ID)' 'Purchase Date' 'Shares' 'Price' 'Value' 'id'
          pfColumns.textAlign←'Left' 'Right' 'Right' 'Right' 'Right' 'Right'
  ⍝        pfColumns.width←↓'I2,<%>'⎕FMT 40 15 15 15 15    ⍝ Brian: that seems to have no effect?
          pfColumns[1].(editType dataSource)←'⍎ej.Grid.EditingType.Dropdown' '⍎commodities'
          pfColumns[1].editParams←'⍎{fields:{id:"text", text:"text", value:"text"}}'
          pfColumns[2].(editType format)←'⍎ej.Grid.EditingType.DatePicker' '{0:yy/MM/dd}'
          pfColumns[2].defaultValue←'⍎new Date(',(¯1↓#.HtmlUtils.enlist(⍕¨0 ¯1 0+3↑⎕TS),¨','),')'
          pfColumns[4].editParams←'⍎{decimalPlaces:2}'
          pfColumns[4 5].format←⊂'{0:C2}'
          pfColumns[5].allowEditing←_false
          pfColumns[3].(editParams validationRules)←'⍎{decimalPlaces: 0 , minValue: 1 }' '⍎{required:true,number:true,min:1}'
          pfColumns[4].(editParams validationRules)←'⍎{decimalPlaces: 2 , minValue: .01 }' '⍎{required:true,number:true,min:.01}'
          pfColumns[6].(isIdentity isPrimaryKey visible)←_true _true _false
     
          pfItemsGrid←'#pfItemsGrid'cpf.Add _.ejGrid(pfItemsGridData pfColumns)
          'locale'pfItemsGrid.Set'en-US'
          'toolbarSettings'pfItemsGrid.Set'⍎{ showToolbar: true, toolbarItems: [',tbi,']}'
          'editSettings.(allowEditing allowAdding allowDeleting)'pfItemsGrid.Set _true
          'allowPaging'pfItemsGrid.Set _true
          'allowSorting'pfItemsGrid.Set _true
          'allowFiltering'pfItemsGrid.Set _true
          'filterSettings'pfItemsGrid.Set'⍎{filterType: "excel"}'
          pfItemsGrid.On('endEdit endDelete endAdd')'UpdatePortfolioDetails'('dataSource' 'model' 'dataSource')
     
     
     
      :Case 2
⍝----------- Scenarios for current pf ----------------------------------
          pfScen←'#pfScen' 'style=display:none;float:left;'R.Add _.div
          pfScen.Add _.h2('Scenarios for portfolio '('.pfname'New _.span))
          sc1Columns←⎕NS¨3⍴⊂''
          sc1Columns.field←'id' 'name' 'lupd'
          sc1Columns.headerText←'ID' 'Name' 'Last Update'
          sc1Columns.textAlign←'Left' 'Left' 'Left'
          sc1Columns[1].(isIdentity isPrimaryKey visible)←_true _true _false
          sc1Columns[3].format←'{0:yy/MM/dd}'
          sc1Columns[3].allowEditing←_false
          sc1Columns[2].editType←'⍎ej.Grid.EditingType.String'
     
          sc1grid←'#ScenarioGrid1'pfScen.Add _.ejGrid((0 3⍴0)sc1Columns)
     
          sc1grid.On'rowSelected' 'ClickOnScenario'('row' 'argument' 'data')  ⍝ ⎕IO of rowindex=0
          sc1grid.On('endEdit endDelete endAdd')'UpdateScenarioList'('editcell' 'argument' 'data')
     
⍝ custom toolbar-item to run a scenario
⍝ good: we can have it
⍝ bad: the customToolBarItems below have to refer to the classname - and that classname is used  as title of the icon. Found no way to assign a specific text to use in tooltip...
⍝ But with the JS in the script below we can achieve that..
     
          Add _.style'.RunScenario:before  {    content:"\f04b"; font-family:FontAwesome;  }'
⍝ unused:
⍝   $("#ScenarioGrid1_RunScenario").attr("title","Run current scenario");
          Add _.Script ScriptFollows
⍝ $(function(){
⍝   $("#ScenarioGrid1_RunScenario").attr("data-content","Run current scenario");
⍝ });
          tbi←2↓∊', ej.Grid.ToolBarItems.'∘,¨'Add' 'Edit' 'Delete' 'Update' 'Cancel'
          'toolbarSettings'sc1grid.Set'⍎{ showToolbar: true, toolbarItems: [',tbi,'] , customToolbarItems: ["RunScenario"]}'
          'editSettings'sc1grid.Set'⍎{allowEditing: true, allowAdding: true, allowDeleting: true }'
          'allowSorting'sc1grid.Set _true
          Add _.Handler('#ScenarioGrid1_RunScenario' 'click' 'RunScenario'('target' 'argument' 'currentTarget'))
          Add _.Script'$("#ScenarioGrid1_RunScenario").prop("disabled" , true);'   ⍝ disabled by default
     
⍝------------ params of scenario -----------------------------------------
          scParams←'#scParams' 'style="display:none;float:left;"'R.Add _.div   ⍝ hide as long as we have none...
          scParams.Add _.h2('Parameters of scenario '('.scname'New _.span))
          sc2Columns←⎕NS¨4⍴⊂''
          sc2Columns.field←'id' 'end' 'outlook' 'volatility'
          sc2Columns.headerText←'id' 'End' 'Outlook' 'Volatility'
          sc2Columns.textAlign←'Left' 'Left' 'Right' 'Right'
          sc2Columns[1].(isIdentity isPrimaryKey visible)←_true _true _false
          sc2Columns[2].(editType format)←'⍎ej.Grid.EditingType.DatePicker' '{0:yy/MM/dd}'
          sc2Columns[2].defaultValue←'⍎new Date(',(¯1↓#.HtmlUtils.enlist(⍕¨0 ¯1 0+3↑⎕TS),¨','),')'
          sc2Columns[3].(editType format editParams validationRules)←'numericedit' '{0:n0}' '⍎{decimalPlaces: 0 , minValue: -2 , maxValue: 2}' '⍎{number: true, range: [-2, 2]}'
          sc2Columns[4].(editType format editParams validationRules)←'numericedit' '{0:n0}' '⍎{decimalPlaces: 0 , minValue: 1 , maxValue: 5}' '⍎{number: true, range: [1, 5]}'
     
     
          sc2grid←'#ScenarioGrid2'scParams.Add _.ejGrid((0 4⍴0)sc2Columns)
     
          tbi←2↓∊', ej.Grid.ToolBarItems.'∘,¨'Add' 'Edit' 'Delete' 'Update' 'Cancel'
          'toolbarSettings'sc2grid.Set'⍎{ showToolbar: true, toolbarItems: [',tbi,'] }'
          'editSettings'sc2grid.Set'⍎{allowEditing: true, allowAdding: true, allowDeleting: true }'
          'allowSorting'sc2grid.Set _true
          sc2grid.On('endEdit endDelete endAdd')'UpdateScenarioParams'('dataSource' 'model' 'dataSource')
     
     
⍝-------------- results of scenario --------------------------------------
          scResults←'#scResults' 'style="display:none;float:left;"'R.Add _.div   ⍝ hide as long as we have none...
     
          scResults.Add _.h2('Results of scenario '('.scname'New _.span))
          scResults.Add _.h3'Benchmark'
          '#scBench'scResults.Add _.div
          scResults.Add _.h3'Commodity-Prices at Start/End of Simulation'
          sc3Columns←⎕NS¨3⍴⊂''
          sc3Columns.field←'commodity' 'firstval' 'lastval'
          sc3Columns.headerText←'Commodity' 'First Value' 'Last Value'
          sc3Columns.textAlign←'Left' 'Right' 'Right'
          sc3Columns[2 3].format←⊂'{0:C2}'
     
          sc3grid←'#ScenarioGrid3'scResults.Add _.ejGrid((0 3⍴0)sc3Columns)
          'toolbarSettings'sc3grid.Set'⍎{ showToolbar:false }'
          'editSettings'sc3grid.Set'⍎{allowEditing: false, allowAdding: false, allowDeleting: false }'
          'allowSorting'sc3grid.Set _true
     
      :Case 3
     
          '#chartContainerInv'R.Add _.div'No scenario-results to show!'
          chrt←'#chartContainer' 'style="display:none"'R.Add _.div
          chrt.Add'Please select a chart to plot for Scenario '
          '.scname'chrt.Add _.span
          chrt.Add _.br
          chSelect←'#chSelect'chrt.Add _.Select
          chSelect.On'change' 'onChartSelect'
          ⍝ Comparison of scenario-benchmarks / Sum / Selected commodity
          '#TheChart'chrt.Add _.div    ⍝ prepare a region for ejChart
     
      :Case 4
     
          ig←'#t3settings'(R.Add _.Form).Add _.InputGrid
          ig.Labels←(New _.Icon'fa-user')(New _.Icon'fa-at')
          ig.Inputs←'name' 'mail'New¨_.EditField _.EditField
          ig.Inputs[1 2].SetAttr⊂'style="width:30em;"'
          ⍝ig.Inputs[1 2].SetAttr¨⊂¨(⊂'placeholder="'),¨'Name"' 'Email"'
          ⍝ nope
          ig.Inputs[1].SetAttr⊂'placeholder="Your Name"'
          ig.Inputs[2].SetAttr⊂'placeholder="Email"'
          sbtn←'style="margin-top:1em;" class="primBtn" id="saveBtn"'R.Add _.Button(⊂(New _.Icon'fa-floppy-o'),' Save')
          sbtn.On'click' 'SaveTab3'
      :EndSelect
      R←R.Render
    ∇

    :endsection

    :section Portfolios
    ∇ R←CallbackFn1;ridx;tab;row;pfItemsGridData;data;port;id  ⍝ handles callbacks of grid with list of portfolios
      :Access public
      R←⍬
      :Select _event
      :Case 'rowSelected'
          row←Get'row'
          (CurrPFid CurrPFname)←row.(id name)
          pfItemsGridData←CatchAPIErrors(SessionGet'APIref').CallAPI'PortfolioSummary'((SessionGet'UID')(row.id))
          pfItemsGridData[;1]←Commodities[Commodities[;1]⍳pfItemsGridData[;1];4] ⋄ pfItemsGridData←1 0 1 1 1 1/pfItemsGridData  ⍝ remove separate title-column for data
     
          ScenarioGrid1Data←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenariosForPortfolio'(row.id)
          R,←SetSCid 0  ⍝ no "current scenario" (but pfScen will be made visible afterwards...)
     
          R←Execute'pfItemsGrid'UpdateDataSourceWith pfItemsGridData('title' 'purch' 'count' 'price' 'val')('purch')
          R,←Execute'ScenarioGrid1'UpdateDataSourceWith(ScenarioGrid1Data[;1 4 5])('id' 'name' 'lupd')('lupd')
          R,←'.pfname'Replace row.name
          R,←Execute'$("#pfScen").show();$("#ScenarioGrid1_RunScenario").prop("disabled" , true);'
          R,←Execute'$("#scParams").hide();'
          R,←Execute'$("#currPf").show();'
     
     
      :Case 'endAdd'
          data←Get'editcell'
          port←CatchAPIErrors(SessionGet'APIref').CallAPI'PortfolioPrototype'   ⍝ prototype of a portfolio
          id←CatchAPIErrors(SessionGet'APIref').CallAPI'AddPortfolio'((SessionGet'UID')data.name port)
          ListPortfolios⍪←id data.name ⎕TS 0 0
          R←Execute'ListPortfolios'UpdateDataSourceWith(ListPortfolios)('id' 'name' 'lupd' 'cntComm' 'cntScen')('lupd')
     
      :Case 'endDelete'
          id←(Get'editcell').id
          CatchAPIErrors(SessionGet'APIref').CallAPI'DeletePortfolio'(id)
          ListPortfolios←ListPortfolios{⍺[(⍳1↑⍴⍺)~⍺[;1]⍳⊂⍵;]}id
          R←Execute'$("#currPf").hide();'
          R,←SetSCid 0
     
      :Case 'endEdit'
          id←(Get'editcell').id
          CatchAPIErrors(SessionGet'APIref').CallAPI'UpdatePortfolio'(id name)
          ListPortfolios[ListPortfolios[;1]⍳id;2 3]←name ⎕TS
     
      :EndSelect
    ∇

    ∇ R←UpdatePortfolioDetails;ds;port;tab
      :Access public
      ds←Get'dataSource'
    ⍝ new items come with a field title_hidden and w/o id - so do not send back THAT array
    ⍝ instead make sure data has the right format, save it and send back the updated pf:
      ds←(⊂Commodities){i←⍺[;1]⍳⊂⍵.title ⋄ i>1↑⍴⍺:⍵ ⋄ ⍵.title←4⊃⍺[i;] ⋄ ⍵}¨ds  ⍝ replace code of stock with title
      ds.purch←#.Dates.ParseISODate¨ds.purch
      ds.(count price)←{2⊃⎕VFI⍕⍵}¨ds.(count price)  ⍝ paranoid? No, SF will accept error-prone input ("0,0" when decsep is "."), so better safe than sorry!
     
      port←↑ds.(title count price purch)  ⍝ back into array
      port[;1]←{¯1↓(⌽∧\⌽⍵≠'(')/⍵}¨port[;1]  ⍝ extract stock code (last word enclosed in () - we do not explicity check for closing ) etc., but assume string will be correct
      CatchAPIErrors(SessionGet'APIref').CallAPI'UpdatePortfolio'(CurrPFid CurrPFname port)   ⍝ write back to file
     
    ⍝ and update screen
      port[;1]←(⊂Commodities){~(⊂⍵)∊⍺:⍵ ⋄ 2⊃⍺[⍺[;1]⍳⊂⍵;]}¨port[;1]
      port,←0    ⍝ append a column for the Basis
      port[;5]←×/port[;2 3]
     
      R←Execute'pfItemsGrid'UpdateDataSourceWith port('title' 'count' 'price' 'purch' 'val')('purch')
     
    ⍝ user may have added or deleted items, so we should update the count of commodities in the top grid:
      ClientSummary←CatchAPIErrors(SessionGet'APIref').CallAPI('ClientSummary'(SessionGet'UID'))
      ListPortfolios←ClientSummary[;6 1 5 2 3]
      tab←#.JSON.fromTable'id' 'name' 'lupd' 'cntComm' 'cntScen'⍪ListPortfolios
      tab.lupd←1 #._JSS.JSDate¨tab.lupd
      tab←1 0 1 #.JSON.fromAPL tab
      R,←Execute('var gobj = $("#ListPortfolios").data("ejGrid");gobj.dataSource(',tab,');')
     
     
    ∇

    :endsection


    :section Scenarios
    ∇ R←RunScenario;data
      :Access public
      data←CatchAPIErrors(SessionGet'APIref').CallAPI'RunScenario'(CurrSCid)
      R←Execute'ScenarioGrid3'UpdateDataSourceWith(data[;1 2,¯1↑⍴data])('commodity' 'firstval' 'lastval')
      R,←Execute'$("#scResults").show();'
      R,←Execute'$("#chartContainer").show();'
      R,←Execute'$("#chartContainerInv").hide();'
    ∇

    ∇ R←BuildListPfSc cs;i
      R←0 3⍴0
      :For i :In Index cs[;3]>0
          sc←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenariosForPortfolio'(cs[i;6])
          R⍪←cs[i;1 6],1
          :For j :In ↓sc
              R⍪←j[4 1],2
          :EndFor
      :EndFor
     
    ∇

    ∇ R←ClickOnScenario;ridx;tab;cellAtts;pct;i;sc2Res;bm  ⍝ handles callbacks of grid with list of scenarios
      :Access public
      row←Get'row'
      R←SetSCid row.id
      CurrSCdata←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenario'(CurrSCid)
      sc2GridData←2⊃CurrSCdata
      sc2Res←3⊃CurrSCdata
      R,←Execute'ScenarioGrid2'UpdateDataSourceWith(sc2GridData)('end' 'outlook' 'volatility')('end')
      R,←'.scname'Replace(CurrSCname←1 4⊃CurrSCdata)
      :If 0<1↑⍴sc2GridData
          R,←Execute'$("#ScenarioGrid1_RunScenario").prop("disabled" , false);'
      :Else
          R,←Execute'$("#ScenarioGrid1_RunScenario").prop("disabled" , true);'
      :EndIf
     
      :If 0<1↑⍴sc2Res
          bm←CatchAPIErrors(SessionGet'APIref').CallAPI'BenchmarkScenario'(CurrSCid)
        ⍝ Format benchmark results:
          i←bm[;1]⍳'start_value' 'end_value' ⋄ bm[i;3]←(⊂'CI15')⎕FMT¨bm[i;3]
          i←bm[;1]⍳⊂'pct' ⋄ pct←bm[i;3] ⋄ bm[i;3]←(⊂'M<->P<+>CF8.2')⎕FMT¨bm[i;3]
     
          cellAtts←,[0.5]((¯1+1↑⍴bm)⍴''),⊂'.scBenchResult','NP'[1+pct>0]
          R,←'#scBench'Replace('.scBenchmark'New _.Table((⍉bm[;2 3])(cellAtts)1)).Render
          (from to)←sc2Res[1;2,¯1↑⍴sc2Res]
          (from to)←#.utils.fmtDate¨from to
          ⍝↓↓↓↓↓ this is a horrible collection of calls just to change the header - but I did not find a simpler way to do that :(
          R,←Execute'var gobj=$("#ScenarioGrid3").data("ejGrid");gobj.getColumnByField("firstval").headerText="',from,'";gobj.getColumnByField("lastval").headerText="',to,'";gobj.refreshContent(true);'
          R,←Execute'ScenarioGrid3'UpdateDataSourceWith(1 0↓sc2Res[;1 2,¯1↑⍴sc2Res])('commodity' 'firstval' 'lastval')('')
          R,←Execute'$("#scResults").show();'
          R,←Execute'$("#chartContainer").show();'
          R,←Execute'$("#chartContainerInv").hide();'
          Charts←1 2⍴'Comparison of scenarios' '_cmp'
          Charts⍪←'Sum of commodities' '_sum'
          Charts⍪←(1↓sc2Res[;1]),[1.5]⍕¨1+⍳¯1+⍬⍴⍴sc2Res
          R,←chSelect.ReplaceOptions Charts
      :Else
          R,←Execute'$("#scResults").hide();'
          R,←Execute'$("#chartContainer").hide();'
          R,←Execute'$("#chartContainerInv").show();'
          R,←chSelect.ReplaceOptions(1 2⍴'No scenario-results available' '0')
      :EndIf
    ∇

    ∇ R←UpdateScenarioList
      :Access public
      :Select _event
      :Case 'endAdd'
           rec ← Get'editcell'
          R←SetSCid CatchAPIErrors(SessionGet'APIref').CallAPI'AddScenario'(CurrPFid rec.name(0 3⍴0))
          
          ScenarioGrid1Data←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenariosForPortfolio'(CurrPFid)
     
          R,←Execute'ScenarioGrid1'UpdateDataSourceWith(ScenarioGrid1Data[;1 4 5])('id' 'name' 'lupd')('lupd')
          R,←Execute'$("#ScenarioGrid1_RunScenario").prop("disabled" , false);'
          R,←Execute'$("#scParams").show();'
          R,←Execute'ScenarioGrid2'UpdateDataSourceWith(0 3⍴0)('end' 'outlook' 'volatility')('end')
     
      :Case 'endEdit'
           rec ← Get'editcell'
          CatchAPIErrors(SessionGet'APIref').CallAPI'UpdateScenario'(rec.(id name))
          ScenarioGrid1Data←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenariosForPortfolio'(CurrPFid)
          R←Execute'ScenarioGrid1'UpdateDataSourceWith(ScenarioGrid1Data[;1 4 5])('id' 'name' 'lupd')('lupd')
     
     :case 'endDelete'
          CatchAPIErrors(SessionGet'APIref').CallAPI'DeleteScenario'(rec.id)
          ScenarioGrid1Data←CatchAPIErrors(SessionGet'APIref').CallAPI'GetScenariosForPortfolio'(CurrPFid)
     
          R,←Execute'ScenarioGrid1'UpdateDataSourceWith(ScenarioGrid1Data[;1 4 5])('id' 'name' 'lupd')('lupd')
          R,←Execute'$("#ScenarioGrid1_RunScenario").prop("disabled" , false);'
          R,←Execute'$("#scParams").hide();'
     
      :EndSelect
    ∇

    ∇ R←UpdateScenarioParams
      :Access public
      ds←Get'dataSource'
      tab←↑ds.(end outlook volatility)
      tab[;1]←#.Dates.ParseISODate¨tab[;1]
      tab←tab[⍋↑tab[;1];]  ⍝ ascending order of date
      CatchAPIErrors(SessionGet'APIref').CallAPI'UpdateScenario'(CurrSCid CurrSCname tab)
      R←Execute('ScenarioGrid2'UpdateDataSourceWith(tab('end' 'outlook' 'volatility')'end'))
    ∇


    ∇ R←SetSCid newVal
    ⍝ set id of current scenario to specified value (and return JS to update UI)
      CurrSCid←newVal
      R←⍬
      :If newVal>0
          R,←Execute'$("#pfScen").show();'
          R,←Execute'$("#scParams").show();'
      :Else
          R,←Execute'$("#pfScen").hide();'
          R,←Execute'$("#scParams").hide();'
      :EndIf
    ∇

    :endsection

    :section Charts
    ∇ R←onChartSelect;res;dataX;i;pnts;code
      :Access public
      →(_value≡,0)/0  
      res←3⊃CurrSCdata
      dataX←1↓res[1;]
      :If _value≡'_sum'
          dataY←+⌿1 1↓res ⋄ series←'Sum'
      :ElseIf _value≡'_cmp'  ⍝ comparison of scenarios
          ∘∘∘write code or eliminate option∘∘∘
      :Else ⍝ value is code of commodity
          i←⍬⍴2⊃⎕VFI _value ⋄ dataY←1↓res[i;] ⋄ series←Commodities{⊃(⍺[;4],⍵)[⍺[;1]⍳⊂⍵]}1⊃res[i;]
      :EndIf
      pnts←'x' 'y'#.JSON.fromTable dataX,[1.5]dataY
      pnts.x←1 #._JSS.JSDate¨pnts.x
      pnts←1 0 1 #.JSON.fromAPL pnts
     
     
      code←'$("#TheChart").ejChart( {'
      code,←'title: {text: "',CurrPFname,' / ',CurrSCname,' / Simulated valuation"} , '
      code,←'name: "Projected value",'
      code,←'primaryYAxis: {title: {text: "Value ($)"}},'
      code,←'primaryXAxis: {'
      code,←'   valueType: "datetime",'
      code,←'   labelFormat: "MMM/dd",'
      code,←'   title: {text: "Date"},'
      code,←'} ,'
      code,←'series: [ { points: ',pnts,','
      code,←'   enableAnimation: true,'
      code,←'   type: "line", '
      code,←'   tooltip: {visible: true } ,'
      code,←'   name: "',series,'"'
      code,←'  }]'
      code,←'});'
      R←Execute code
    ∇

    :endsection

    :section Settings
    ∇ R←SaveTab3
      :Access public
        ⍝ just a plain vanilla function which you may adopt as required
      ⎕←'name=',Get'name'
      ⎕←'mail=',Get'mail'
      ⎕←'Save that data!'
      R←Execute'green'#._.jBox.Notice((New _.Icon'fa-check'),New _.span' Settings saved.')
    ∇
    :endsection




    :section Tools
    ∇ R←GridId UpdateDataSourceWith arg;tab;dateFld;table;colnames;dateCol
      :Access public
    ⍝ transform a pfItem-List into the corresponding JS-Variable and build the code to assign it to the dataSource-Param of the ejGrid-Obj.
      (table colnames dateCol)←arg defaultArgs(0 0⍴0)('')('')
      :If ~(⊂'id')∊colnames    ⍝ append id-column if not found in data
          table,←⍳1↑⍴table ⋄ colnames,←⊂'id'
      :EndIf
      tab←colnames #.JSON.fromTable table
      :If ~0∊1↑⍴dateCol
      :AndIf ~0∊⍴table
          dateFld←1 #._JSS.JSDate¨tab⍎¨⊂dateCol
          ⍎'tab.',dateCol,'←dateFld'
      :EndIf
      tab←1 0 1 #.JSON.fromAPL tab
      R←'var gobj = $("#',GridId,'").data("ejGrid");gobj.dataSource(',tab,');'
    ∇

    :endsection



:endclass
